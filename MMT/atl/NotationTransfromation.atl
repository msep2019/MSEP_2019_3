-- @path DN=/ModelTransformatison/metamodels/PapyrusUMLNotation.ecore
-- @nsURI UML=http://www.eclipse.org/uml2/5.0.0/UML
-- @nsURI STYLE=http://www.eclipse.org/papyrus/infra/viewpoints/policy/style

module NotationTransfromation;
create OUT: DN from IN: UML, IN3: STYLE; 

rule Diagram {
	from 
		uml: UML!Activity
	to 
		c: DN!Diagram(
			name <- uml.name,
			type <- 'PapyrusUMLActivityDiagram',
			measurementUnit <- 'Pixel',
			children <- shape,
			styles <- Sequence {styles_style1, styles_style2},
			edges <- Sequence{
				uml.edge->collect(e | thisModule.resolveTemp(e, 'conn')), 
				uml.node->collect(e | thisModule.resolveTemp(e, 'conn1')),
				uml.ownedRule->collect(e | thisModule.resolveTemp(e, 'constraint_conn1')),
				uml.ownedRule->collect(e | thisModule.resolveTemp(e, 'constraint_conn2'))}
			),
			shape: DN!Shape(
				type <- '2001',
				element <- uml,
				children <- Sequence {dn1, dn2, dn3, dn4, dn5, dn6},
				layoutConstraint <- shape_bounds	
			),			
			dn1: DN!DecorationNode(
				type <-'5001'
			),
			dn2: DN!DecorationNode(
				type <-'5002'
			),
			dn3: DN!DecorationNode(
				type <-'7001',
				styles <- Sequence {dn3_style1, dn3_style2},
				layoutConstraint <- dn3_bounds
			),
			dn4: DN!DecorationNode(
				type <-'7002',
				styles <- Sequence {dn4_style1, dn4_style2},
				layoutConstraint <- dn4_bounds
			),
			dn5: DN!DecorationNode(
				type <-'7003',
				styles <- Sequence {dn5_style1, dn5_style2},
				layoutConstraint <- dn5_bounds
			),
			dn6: DN!DecorationNode(
				type <-'7004',
				children <- Sequence{
					uml.node->collect(e | thisModule.resolveTemp(e, 'opaqueAction')), 
					uml.node->collect(e | thisModule.resolveTemp(e, 'datastorenodes')),
					uml.ownedRule->collect(e | thisModule.resolveTemp(e, 'constraints')),
					uml.ownedRule->collect(e | thisModule.resolveTemp(e, 'constraintsStereo'))
				},
				layoutConstraint <- dn6_bounds
			),
			shape_bounds: DN!Bounds(
				width <- 600,
				height <- 400
			),
			dn3_bounds: DN!Bounds,
			dn4_bounds: DN!Bounds,
			dn5_bounds: DN!Bounds,
			dn6_bounds: DN!Bounds,
			dn3_style1: DN!SortingStyle,
			dn3_style2: DN!FilteringStyle,
			dn4_style1: DN!SortingStyle,
			dn4_style2: DN!FilteringStyle,
			dn5_style1: DN!SortingStyle,
			dn5_style2: DN!FilteringStyle,
			styles_style1: DN!StringValueStyle(
				name <- 'diagram_compatibility_version',
				stringValue <- '1.1.0'
			),
			styles_style2: DN!DiagramStyle
	do {
		c.element <- uml;
	}
}

--- Rule for OpaqueAction element
rule OpaqueAction {
	from 
		uml_oa: UML!OpaqueAction
	to 
		opaqueAction: DN!Shape(
			type <- '3007',
			lineWidth <- 2,
			styles <- oa_style1,
			children <- Sequence {adn1, adn2},
			layoutConstraint <- oa_bounds,
			eAnnotations <- iconOpaqueAction
		),
		oa_bounds: DN!Bounds(
			x <- 10,
			y <- 60
		),
		adn1: DN!DecorationNode(
			type <-'5003'
		),
		adn2: DN!DecorationNode(
			type <-'6028',
			layoutConstraint <- adn2_location
		),
		oa_style1: DN!HintedDiagramLinkStyle,
		adn2_location: DN!Location,
		iconOpaqueAction: DN!EAnnotation(
			source <- 'displayNameLabelIcon',
			details <- detailsIcon1
		),
		detailsIcon1: DN!EStringToStringMapEntry(
			key <- 'displayNameLabelIcon_value',
			value <- 'false'
		)
	do {
		opaqueAction.element <- uml_oa;
	}
}


rule DataStoreNode {
	from 
		uml_dsn: UML!DataStoreNode
	to 
		datastorenodes: DN!Shape(
			type <- '3078',
			lineColor <- 255,
			lineWidth <- 2,
			styles <- dsn_style1,
			children <- Sequence {dsndn1, dsndn2, dsndn3},
			layoutConstraint <- dsn_bounds
		),
		dsn_bounds: DN!Bounds(
			x <- 10,
			y <- 60
		),
		dsndn1: DN!DecorationNode(
			type <-'5127'
		),
		dsndn2: DN!DecorationNode(
			type <-'5128',
			layoutConstraint <- dsndn2_location
		),
		dsndn3: DN!DecorationNode(
			type <-'6031',
			layoutConstraint <- dsndn3_location
		),
		dsn_style1: DN!HintedDiagramLinkStyle,
		dsndn2_location: DN!Location,
		dsndn3_location: DN!Location
	do {
		datastorenodes.element <- uml_dsn;
	}
}

rule InitialNode {
	from 
		uml_init: UML!InitialNode
	to 
		initnode: DN!Shape(
			type <- '3004',
			lineColor <- 255,
			lineWidth <- 2,
			styles <- init_style1,
			children <- Sequence {initdn1, initdn2},
			layoutConstraint <- init_bounds
		),
		init_bounds: DN!Bounds(
			x <- 10,
			y <- 60
		),
		initdn1: DN!DecorationNode(
			type <-'6034',
			layoutConstraint <-initdn1_location
		),
		initdn2: DN!DecorationNode(
			type <-'5080',
			layoutConstraint <- initdn2_location
		),
		init_style1: DN!HintedDiagramLinkStyle,
		initdn1_location: DN!Location,
		initdn2_location: DN!Location
	do {
		initnode.element <- uml_init;
	}
}

rule Constraint {
	from 
		uml_cons: UML!Constraint
	to 
		constraints: DN!Shape(
			type <- '3112',
			children <- Sequence {consdn1, consdn2},
			layoutConstraint <- cons_bounds,
			eAnnotations <- iconConstraint
		),
		cons_bounds: DN!Bounds(
			x <- 10,
			y <- 60
		),
		consdn1: DN!DecorationNode(
			type <-'5189'
		),
		consdn2: DN!DecorationNode(
			type <-'5190'
		),
		iconConstraint: DN!EAnnotation(
			source <- 'displayNameLabelIcon',
			details <- detailsIcon2
		),
		detailsIcon2: DN!EStringToStringMapEntry(
			key <- 'displayNameLabelIcon_value',
			value <- 'false'
		),
		
		
		constraintsStereo: DN!Shape(
			type <- 'StereotypeComment',
			styles <- Sequence {constraintsStereoStyle1, constraintsStereoStyle2},
			layoutConstraint <- cons_bounds2
		),
		constraintsStereoStyle1: DN!TitleStyle(
			showTitle <- true
		),
		constraintsStereoStyle2: DN!EObjectValueStyle(
			name <- 'BASE_ELEMENT'
		),
		cons_bounds2: DN!Bounds(
			x <- 10,
			y <- 60
		),
		
		constraint_conn1: DN!Connector(
			type <- '4007',
			source <- constraints,
			target <- uml_cons.constrainedElement,
			styles <- conn1_style1,
			bendpoints <- conn1_bendpoints,
			sourceAnchor <- conn1_sourceAnchor,
			targetAnchor <- conn1_targetAnchor
		),
		conn1_style1: DN!FontStyle,		
		conn1_bendpoints: DN!RelativeBendpoints(
			--points <- ''
		),
		conn1_sourceAnchor: DN!IdentityAnchor(
			
		),
		conn1_targetAnchor: DN!IdentityAnchor(
			
		),
		
		
		constraint_conn2: DN!Connector(
			type <- 'StereotypeCommentLink',
			source <- constraints,
			target <- constraintsStereo,
			styles <- Sequence{conn2_style1, conn2_style2},
			bendpoints <- conn2_bendpoints,
			sourceAnchor <- conn2_sourceAnchor,
			targetAnchor <- conn2_targetAnchor
		),
		conn2_style1: DN!FontStyle,
		conn2_style2: DN!EObjectValueStyle(
			name <- 'BASE_ELEMENT'
		),
		conn2_bendpoints: DN!RelativeBendpoints,
		conn2_sourceAnchor: DN!IdentityAnchor,
		conn2_targetAnchor: DN!IdentityAnchor
		
		
	do {
		constraints.element <- uml_cons;
		constraintsStereo.element <- uml_cons;
		constraintsStereoStyle2.eObjectValue <- uml_cons;
		--conn2_style2.eObjectValue <- uml_cons;
	}
}


--- Rule for ControlFlow element
rule ControlFlow {
	from 
		c_uml: UML!ControlFlow
	to 
		conn: DN!Connector(
			type <- '4004',
			source <- c_uml.source,
			target <- c_uml.target,
			lineWidth <- if c_uml.name <> '' then 2 else false endif,
			children <- Sequence {cdn1, cdn2, cdn3, cdn4},
			styles <- c_style1,
			bendpoints <- c_bendpoints,
			sourceAnchor <- c_sourceAnchor,
			targetAnchor <- c_targetAnchor
		),
		cdn1: DN!DecorationNode(
			type <-'6003',
			layoutConstraint <- cdn1_Location
		),
		cdn2: DN!DecorationNode(
			type <-'6004',
			layoutConstraint <- cdn2_Location
		),
		cdn3: DN!DecorationNode(
			type <-'6009',
			layoutConstraint <- cdn3_Location
		),
		cdn4: DN!DecorationNode(
			type <-'6011',
			layoutConstraint <- cdn4_Location
		),
		c_style1: DN!FontStyle,
		c_bendpoints: DN!RelativeBendpoints,
		c_sourceAnchor: DN!IdentityAnchor,
		c_targetAnchor: DN!IdentityAnchor,
		cdn1_Location: DN!Location,
		cdn2_Location: DN!Location,
		cdn3_Location: DN!Location,
		cdn4_Location: DN!Location
	do {
		conn.element <- c_uml;
	}
}

